---
- debug: "msg=\"ServerName : {{ SERVERNAME}}\""

- name: Query if EC2 Exists Already
  command: aws ec2 describe-instances --region {{ vpc_region }} --filter Name=tag:Name,Values={{ SERVERNAME }} --query "Reservations[].Instances[].PublicIpAddress" --output text
  register: query_public_ip

- name: Create EC2 Instance(s)
  ec2:
    region: "{{ vpc_region }}"
    group: "{{ ec2_security_group }}"
    keypair: "{{ ec2_key_name }}"
    instance_type: "{{ ec2_instance_type }}"
    image: "{{ ami_name }}"
    vpc_subnet_id: "{{ ec2_subnet_id }}"
    assign_public_ip: yes
    wait: True
    wait_timeout: 600
    user_data: |
      #!/bin/bash
      set -e -x
      sudo yum update -y
      sudo yum install docker -y
      sudo usermod -aG docker ec2-user
      sudo systemctl start docker
      sudo systemctl enable docker

    instance_tags:
      Name: "{{ SERVERNAME }}"
      Environment: "{{ ENVIRONMENT }}"
    # volumes:
    #   - device_name: /dev/sda1
    #     volume_type: gp2
    #     volume_size: "{{ ec2_volume_size }}"
    count: "{{ ec2_count }}"
    count_tag:
      Name: "{{ SERVERNAME }}"
  when: query_public_ip.stdout == ''
  register: ec2

- name: Get ip address of existing or created instance
  command: aws ec2 describe-instances --region {{ vpc_region }} --filter Name=tag:Name,Values={{ SERVERNAME }} --query "Reservations[].Instances[].PublicIpAddress" --output text
  register: query_public_ip

- debug: "msg=\"Public IP : {{ query_public_ip.stdout }}\""

- name: Set fact for ip address
  set_fact:
    ec2_instance_public_address: "{{ query_public_ip.stdout }}"

- name: Add instance to group for later plays
  add_host:
    name: "{{ ec2_instance_public_address }}"
    ansible_ssh_port: 22
    ansible_user: "{{ ec2_user }}"
    groups: rubyservers

- name: Wait for ssh to respond
  wait_for:
    host: "{{ ec2_instance_public_address }}"
    port: 22
    state: started

- name: Add instance to local inventory file
  local_action: lineinfile dest=./hosts regexp="{{ query_public_ip.stdout }}" line="{{ query_public_ip.stdout }} ansible_user={{ ec2_user }}"

- name: Adding Istance SSH fingerprints to known hosts
  shell: ssh-keyscan -H {{ ec2_instance_public_address }} >> ~/.ssh/known_hosts

- name: Compress Docker files
  shell: |
    cd ..
    zip -r docker.zip puma webrick
    cp -r docker.zip {{ artifact_dir }}